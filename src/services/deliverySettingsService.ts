import { DeliveryOption, PaymentOption, PromoCode } from '@/types/checkout';

interface GeneralSettings {
  deliveryTimeGeneral: string;
  minOrderFreeDelivery: number;
  currency: string;
}

export interface DeliverySettingsData {
  deliveryOptions: DeliveryOption[];
  paymentOptions: PaymentOption[];
  promoCodes: PromoCode[];
  generalSettings: GeneralSettings;
}

const SHEET_ID = '1naTkxDrQFfj_d7Q2U46GOj24hSqTAqrt_Yz1ImaKyVc';

const DEFAULT_SETTINGS: DeliverySettingsData = {
  deliveryOptions: [
    {
      id: 'store_pickup',
      name: '–î–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω TS',
      price: 0,
      estimatedDays: '5-7 –¥–Ω–µ–π',
      description: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –≤–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–µ'
    },
    {
      id: 'courier_ts',
      name: '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º TS',
      price: 0,
      estimatedDays: '5-7 –¥–Ω–µ–π',
      description: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º –ø–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—É'
    },
    {
      id: 'cdek_pickup',
      name: '–°–î–≠–ö - –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏',
      price: 300,
      estimatedDays: '3-5 –¥–Ω–µ–π',
      description: '–î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø—É–Ω–∫—Ç–∞ –°–î–≠–ö'
    },
    {
      id: 'cdek_courier',
      name: '–°–î–≠–ö - –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º',
      price: 500,
      estimatedDays: '3-5 –¥–Ω–µ–π',
      description: '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º –°–î–≠–ö –Ω–∞ –¥–æ–º'
    },
    {
      id: 'post_russia',
      name: '–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏',
      price: 250,
      estimatedDays: '7-14 –¥–Ω–µ–π',
      description: '–î–æ—Å—Ç–∞–≤–∫–∞ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏'
    },
    {
      id: 'boxberry',
      name: 'BoxBerry',
      price: 350,
      estimatedDays: '4-6 –¥–Ω–µ–π',
      description: '–î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –ø—É–Ω–∫—Ç–∞ BoxBerry'
    }
  ],
  paymentOptions: [
    {
      id: 'card',
      name: '–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π (–ú–ò–†, VISA, MasterCard)',
      description: '–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π'
    },
    {
      id: 'cash_vladivostok',
      name: '–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –≤ –≥–æ—Ä–æ–¥–µ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫',
      description: '–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏'
    }
  ],
  promoCodes: [
    {
      code: 'WELCOME10',
      discount: 10,
      type: 'percentage'
    },
    {
      code: 'SAVE500',
      discount: 500,
      type: 'amount'
    },
    {
      code: 'FREESHIP',
      discount: 0,
      type: 'free_shipping'
    }
  ],
  generalSettings: {
    deliveryTimeGeneral: '16-21 –¥–Ω–µ–π',
    minOrderFreeDelivery: 5000,
    currency: '‚ÇΩ'
  }
};

/**
 * –ü–∞—Ä—Å–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ CSV –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤:
 * 
 * –§–æ—Ä–º–∞—Ç 1: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º |
 * DELIVERY_SETTING|cdek_pickup|–°–î–≠–ö - –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏|350|3-5 –¥–Ω–µ–π|–î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø—É–Ω–∫—Ç–∞ –°–î–≠–ö
 * 
 * –§–æ—Ä–º–∞—Ç 2: –û—Ç–¥–µ–ª—å–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏
 * delivery_id, name, price, days, description
 * 
 * –§–æ—Ä–º–∞—Ç 3: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
 */
const parseSettingsFromCSV = (csvText: string): Partial<DeliverySettingsData> => {
  const lines = csvText.split('\n').filter(line => line.trim());
  
  const deliveryOptions: DeliveryOption[] = [];
  const paymentOptions: PaymentOption[] = [];
  const promoCodes: PromoCode[] = [];
  
  console.log('üîç –ü–∞—Ä—Å–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ CSV:', lines.length, '—Å—Ç—Ä–æ–∫');
  
  for (let i = 0; i < lines.length; i++) {
    const line = lines[i].trim();
    
    // –§–æ—Ä–º–∞—Ç 1: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º |
    if (line.includes('|')) {
      const parts = line.split('|').map(part => part.trim());
      
      // –ü–∞—Ä—Å–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
      if (parts[0] === 'DELIVERY_SETTING' && parts.length >= 5) {
        const option: DeliveryOption = {
          id: parts[1] as any,
          name: parts[2],
          price: parseInt(parts[3]) || 0,
          estimatedDays: parts[4],
          description: parts[5] || ''
        };
        deliveryOptions.push(option);
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:', option.name, '=', option.price, '‚ÇΩ');
      }
      
      // –ü–∞—Ä—Å–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–ª–∞—Ç—ã
      if (parts[0] === 'PAYMENT_SETTING' && parts.length >= 3) {
        paymentOptions.push({
          id: parts[1] as any,
          name: parts[2],
          description: parts[3] || ''
        });
      }
      
      // –ü–∞—Ä—Å–∏–º –ø—Ä–æ–º–æ–∫–æ–¥—ã
      if (parts[0] === 'PROMO_SETTING' && parts.length >= 4) {
        promoCodes.push({
          code: parts[1].toUpperCase(),
          discount: parseFloat(parts[2]) || 0,
          type: parts[3] as any
        });
      }
    }
    
    // –§–æ—Ä–º–∞—Ç 2: CSV —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (–µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç delivery_id, name, price, etc.)
    else if (i === 0 && line.toLowerCase().includes('delivery_id') && line.toLowerCase().includes('price')) {
      console.log('üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω CSV —Ñ–æ—Ä–º–∞—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏');
      
      const headers = line.split(',').map(h => h.trim().toLowerCase());
      const idIndex = headers.findIndex(h => h.includes('delivery_id') || h.includes('id'));
      const nameIndex = headers.findIndex(h => h.includes('name'));
      const priceIndex = headers.findIndex(h => h.includes('price'));
      const daysIndex = headers.findIndex(h => h.includes('days') || h.includes('time'));
      const descIndex = headers.findIndex(h => h.includes('description') || h.includes('desc'));
      
      // –ü–∞—Ä—Å–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∞–≤–∫–∏
      for (let j = i + 1; j < lines.length; j++) {
        const dataLine = lines[j].trim();
        if (!dataLine) continue;
        
        const values = dataLine.split(',').map(v => v.trim().replace(/^["']+|["']+$/g, ''));
        
        if (values.length > Math.max(idIndex, nameIndex, priceIndex)) {
          const option: DeliveryOption = {
            id: values[idIndex] as any,
            name: values[nameIndex] || '',
            price: parseInt(values[priceIndex]) || 0,
            estimatedDays: daysIndex >= 0 ? values[daysIndex] : '',
            description: descIndex >= 0 ? values[descIndex] : ''
          };
          
          if (option.id && option.name) {
            deliveryOptions.push(option);
            console.log('‚úÖ CSV –¥–æ—Å—Ç–∞–≤–∫–∞:', option.name, '=', option.price, '‚ÇΩ');
          }
        }
      }
      break; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    }
  }
  
  const result: Partial<DeliverySettingsData> = {};
  
  if (deliveryOptions.length > 0) {
    result.deliveryOptions = deliveryOptions;
    console.log('üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–ø—Ü–∏–π –¥–æ—Å—Ç–∞–≤–∫–∏:', deliveryOptions.length);
  }
  if (paymentOptions.length > 0) {
    result.paymentOptions = paymentOptions;
    console.log('üí≥ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–ø—Ü–∏–π –æ–ø–ª–∞—Ç—ã:', paymentOptions.length);
  }
  if (promoCodes.length > 0) {
    result.promoCodes = promoCodes;
    console.log('üé´ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', promoCodes.length);
  }
  
  return result;
};

/**
 * –ü—ã—Ç–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:
 * 1. –û—Å–Ω–æ–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ (gid=0) - –∏—â–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
 * 2. –í–∫–ª–∞–¥–∫–∞ "–î–æ—Å—Ç–∞–≤–∫–∞" (gid=1) - –µ—Å–ª–∏ –µ—Å—Ç—å
 * 3. –í–∫–ª–∞–¥–∫–∞ "Settings" (gid=2) - –µ—Å–ª–∏ –µ—Å—Ç—å
 */
export const fetchDeliverySettings = async (): Promise<DeliverySettingsData> => {
  const attempts = [
    { name: '–û—Å–Ω–æ–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞', gid: 0 },
    { name: '–í–∫–ª–∞–¥–∫–∞ –î–æ—Å—Ç–∞–≤–∫–∞', gid: 1 },
    { name: '–í–∫–ª–∞–¥–∫–∞ Settings', gid: 2 }
  ];
  
  let finalSettings = { ...DEFAULT_SETTINGS };
  let foundAnySettings = false;
  
  for (const attempt of attempts) {
    try {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ${attempt.name} (gid=${attempt.gid})...`);
      
      const csvUrl = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/export?format=csv&gid=${attempt.gid}`;
      
      const response = await fetch(csvUrl, {
        cache: 'no-store',
        headers: {
          'Cache-Control': 'no-cache, no-store, must-revalidate',
          'Pragma': 'no-cache',
          'Expires': '0'
        }
      });

      if (!response.ok) {
        console.log(`‚ùå ${attempt.name}: HTTP ${response.status}`);
        continue;
      }

      const csvText = await response.text();
      
      if (!csvText || csvText.trim().length < 10) {
        console.log(`‚ùå ${attempt.name}: –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ`);
        continue;
      }
      
      const customSettings = parseSettingsFromCSV(csvText);
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      if (customSettings.deliveryOptions && customSettings.deliveryOptions.length > 0) {
        finalSettings.deliveryOptions = customSettings.deliveryOptions;
        foundAnySettings = true;
        console.log(`‚úÖ ${attempt.name}: –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏`);
      }
      
      if (customSettings.paymentOptions && customSettings.paymentOptions.length > 0) {
        finalSettings.paymentOptions = customSettings.paymentOptions;
        foundAnySettings = true;
        console.log(`‚úÖ ${attempt.name}: –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–ª–∞—Ç—ã`);
      }
      
      if (customSettings.promoCodes && customSettings.promoCodes.length > 0) {
        finalSettings.promoCodes = customSettings.promoCodes;
        foundAnySettings = true;
        console.log(`‚úÖ ${attempt.name}: –Ω–∞–π–¥–µ–Ω—ã –ø—Ä–æ–º–æ–∫–æ–¥—ã`);
      }
      
    } catch (error) {
      console.log(`‚ùå ${attempt.name}: –æ—à–∏–±–∫–∞ -`, error);
      continue;
    }
  }
  
  if (!foundAnySettings) {
    console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
  }
  
  return finalSettings;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
let cachedSettings: DeliverySettingsData | null = null;
let cacheTimestamp: number = 0;
const CACHE_DURATION = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç

export const getDeliverySettings = async (forceRefresh = false): Promise<DeliverySettingsData> => {
  const now = Date.now();
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã
  if (!forceRefresh && cachedSettings && (now - cacheTimestamp) < CACHE_DURATION) {
    console.log('üìÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏');
    return cachedSettings;
  }
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏...');
  const settings = await fetchDeliverySettings();
  cachedSettings = settings;
  cacheTimestamp = now;
  
  return settings;
};