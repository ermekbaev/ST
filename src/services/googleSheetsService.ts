// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets —á–µ—Ä–µ–∑ webhook (–±–µ–∑ googleapis)

interface UserData {
  id: string;
  phone: string;
  email: string;
  agreeToMarketing: boolean;
  registrationDate: string;
  lastLogin: string;
}

const WEBHOOK_URL = process.env.GOOGLE_APPS_SCRIPT_URL;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Google Apps Script
export const saveUserToGoogleSheets = async (userData: UserData): Promise<boolean> => {
  try {
    console.log('üìù –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Google Apps Script...');
    console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ webhook URL
    if (!WEBHOOK_URL) {
      console.log('‚ö†Ô∏è Google Apps Script webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return false;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ webhook
    const response = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        action: 'register',
        id: userData.id,
        phone: userData.phone,
        email: userData.email,
        agreeToMarketing: userData.agreeToMarketing,
        registrationDate: userData.registrationDate,
        lastLogin: userData.lastLogin
      })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const result = await response.json();
    
    if (result.success) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Google Sheets —á–µ—Ä–µ–∑ webhook');
      return true;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç Google Apps Script:', result.error);
      return false;
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ webhook:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google Apps Script
export const updateLastLogin = async (userEmail: string): Promise<boolean> => {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ webhook –¥–ª—è:', userEmail);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ webhook URL
    if (!WEBHOOK_URL) {
      console.log('‚ö†Ô∏è Google Apps Script webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return false;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ webhook
    const response = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        action: 'updateLogin',
        email: userEmail,
        lastLogin: new Date().toISOString()
      })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const result = await response.json();
    
    if (result.success) {
      console.log('‚úÖ –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ webhook');
      return true;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç Google Apps Script:', result.error);
      return false;
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞—Ç—ã –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ webhook:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook
export const testGoogleSheetsConnection = async (): Promise<boolean> => {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Apps Script webhook...');

    if (!WEBHOOK_URL) {
      console.log('‚ö†Ô∏è Google Apps Script webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return false;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    const response = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        action: 'test'
      })
    });

    if (response.ok) {
      console.log('‚úÖ Webhook –¥–æ—Å—Ç—É–ø–µ–Ω');
      return true;
    } else {
      console.log('‚ùå Webhook –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
      return false;
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ webhook:', error);
    return false;
  }
};

// –£–î–ê–õ–Ø–ï–ú –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å googleapis, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
// –ï—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Sheets API,
// –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å googleapis –∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
export const saveUserToGoogleSheetsAPI = async (userData: UserData): Promise<boolean> => {
  console.log('‚ö†Ô∏è Google Sheets API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ webhook');
  return false;
};