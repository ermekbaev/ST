// src/app/api/payments/create/route.ts - –ò–°–ü–†–ê–í–õ–ï–ù: –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–Ø –¢–ï–õ–ï–§–û–ù–ê
import { NextRequest, NextResponse } from 'next/server';
import { YooCheckout, ICreatePayment } from '@a2seven/yoo-checkout';

const checkout = new YooCheckout({
  shopId: process.env.YUKASSA_SHOP_ID!,
  secretKey: process.env.YUKASSA_SECRET_KEY!,
});

interface CreatePaymentRequest {
  amount: number;
  orderId: string;
  customerEmail?: string;
  customerPhone: string;
  description?: string;
  returnUrl?: string;
  items?: Array<{
    name: string;
    quantity: number;
    price: number;
  }>;
}

// üî• –î–û–ë–ê–í–õ–ï–ù–ê –§–£–ù–ö–¶–ò–Ø –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò –¢–ï–õ–ï–§–û–ù–ê
function normalizePhone(phone: string): string {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
  const digits = phone.replace(/\D/g, '');
  
  // –ï—Å–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 7
  if (digits.startsWith('8')) {
    return '7' + digits.slice(1);
  }
  
  // –ï—Å–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å +7, —É–±–∏—Ä–∞–µ–º +
  if (digits.startsWith('7')) {
    return digits;
  }
  
  // –ï—Å–ª–∏ 10 —Ü–∏—Ñ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º 7 –≤ –Ω–∞—á–∞–ª–æ
  if (digits.length === 10) {
    return '7' + digits;
  }
  
  return digits;
}

export async function POST(request: NextRequest) {
  try {
    console.log('üí≥ –ÆKassa: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞');
    
    const body: CreatePaymentRequest = await request.json();
    const { amount, orderId, customerEmail, customerPhone, description, returnUrl, items } = body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!amount || amount <= 0) {
      return NextResponse.json({
        success: false,
        error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞'
      }, { status: 400 });
    }

    if (!orderId) {
      return NextResponse.json({
        success: false,
        error: 'ID –∑–∞–∫–∞–∑–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      }, { status: 400 });
    }

    if (!customerPhone) {
      return NextResponse.json({
        success: false,
        error: '–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      }, { status: 400 });
    }

    // üî• –ù–û–†–ú–ê–õ–ò–ó–£–ï–ú –¢–ï–õ–ï–§–û–ù –î–õ–Ø –ÆKASSA
    const normalizedPhone = normalizePhone(customerPhone);
    console.log('üìû –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', {
      original: customerPhone,
      normalized: normalizedPhone
    });

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —á–µ–∫–∞ –¥–ª—è —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏
    const receiptItems = items ? items.map(item => ({
      description: item.name,
      quantity: item.quantity.toString(),
      amount: {
        value: (item.price * item.quantity).toFixed(2),
        currency: 'RUB'
      },
      vat_code: 1, // –ù–î–° –Ω–µ –æ–±–ª–∞–≥–∞–µ—Ç—Å—è
      payment_mode: 'full_payment' as const,
      payment_subject: 'commodity' as const
    })) : [{
      description: description || `–ó–∞–∫–∞–∑ #${orderId}`,
      quantity: '1.00',
      amount: {
        value: amount.toFixed(2),
        currency: 'RUB'
      },
      vat_code: 1,
      payment_mode: 'full_payment' as const,
      payment_subject: 'commodity' as const
    }];

    const createPayload: ICreatePayment = {
      amount: {
        value: amount.toFixed(2),
        currency: 'RUB'
      },
      payment_method_data: {
        type: 'bank_card'
      },
      confirmation: {
        type: 'redirect',
        return_url: returnUrl || `${process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'}/order-success?orderNumber=${orderId}`
      },
      description: description || `–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ #${orderId} –≤ Tigr Shop`,
      metadata: {
        order_id: orderId,
        customer_email: customerEmail || '',
        customer_phone: normalizedPhone, // üî• –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–†–ú–ê–õ–ò–ó–û–í–ê–ù–ù–´–ô –¢–ï–õ–ï–§–û–ù
        source: 'tigr_shop'
      },
      receipt: {
        customer: {
          email: customerEmail,
          phone: normalizedPhone // üî• –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–†–ú–ê–õ–ò–ó–û–í–ê–ù–ù–´–ô –¢–ï–õ–ï–§–û–ù
        },
        items: receiptItems
      },
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      capture: true, // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ
      save_payment_method: false // –ü–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—ã
    };

    console.log('üí≥ –ÆKassa: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞:', {
      amount: createPayload.amount,
      orderId,
      customerPhone: normalizedPhone // üî• –õ–û–ì–ò–†–£–ï–ú –ù–û–†–ú–ê–õ–ò–ó–û–í–ê–ù–ù–´–ô –¢–ï–õ–ï–§–û–ù
    });

    const payment = await checkout.createPayment(createPayload);

    console.log('‚úÖ –ÆKassa: –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω:', {
      paymentId: payment.id,
      status: payment.status,
      confirmationUrl: payment.confirmation?.confirmation_url
    });

    return NextResponse.json({
      success: true,
      paymentId: payment.id,
      confirmationUrl: payment.confirmation?.confirmation_url,
      status: payment.status,
      amount: payment.amount
    });

  } catch (error: any) {
    console.error('‚ùå –ÆKassa: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –ÆKassa
    let errorMessage = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞';
    
    if (error.response?.data) {
      const yukassaError = error.response.data;
      if (yukassaError.description) {
        errorMessage = yukassaError.description;
      } else if (yukassaError.error) {
        errorMessage = yukassaError.error;
      }
      
      // üî• –î–û–ë–ê–í–õ–ï–ù–ê –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –û–®–ò–ë–ö–ï
      console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –ÆKassa:', {
        type: yukassaError.type,
        code: yukassaError.code,
        description: yukassaError.description,
        parameter: yukassaError.parameter
      });
    } else if (error.message) {
      errorMessage = error.message;
    }

    return NextResponse.json({
      success: false,
      error: errorMessage,
      details: process.env.NODE_ENV === 'development' ? error.toString() : undefined
    }, { status: 500 });
  }
}