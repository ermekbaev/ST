// src/app/api/slider/route.ts
import { NextResponse } from 'next/server';

const STRAPI_URL = process.env.NEXT_PUBLIC_STRAPI_URL || 'http://147.45.161.18:1337';

export interface SliderSlide {
  id: number;
  title: string;
  description: string;
  imageDesktop: string;
  imageMobile: string;
  alt: string;
  link: string;
  isActive: boolean;
  order: number;
}

export async function GET() {
  console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ heroes –∏–∑ Strapi...');
  console.log('üåê Strapi URL:', STRAPI_URL);
  
  try {
    // –ó–∞–ø—Ä–æ—Å –∫ heroes API —Å populate –¥–ª—è –º–µ–¥–∏–∞
    const url = `${STRAPI_URL}/api/heroes?populate=*&sort=order:asc`;
    console.log('üì° –ó–∞–ø—Ä–æ—Å –∫:', url);
    
    const response = await fetch(url, {
      headers: {
        'Content-Type': 'application/json',
      },
      cache: 'no-store'
    });

    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);

    if (!response.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ Heroes API: ${response.status}`);
      const errorText = await response.text();
      console.log('‚ùå –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', errorText);
      throw new Error(`Heroes API error: ${response.status}`);
    }

    const data = await response.json();
    console.log('üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ Heroes:', JSON.stringify(data, null, 2));
    
    const rawHeroes = data.data || [];
    console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ heroes: ${rawHeroes.length}`);

    if (rawHeroes.length === 0) {
      console.log('‚ö†Ô∏è Heroes –≤ Strapi –ø—É—Å—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
    //   return getFallbackResponse();
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö heroes
    const slides: SliderSlide[] = rawHeroes
      .filter((hero: any) => {
        // isActive –º–æ–∂–µ—Ç –±—ã—Ç—å null, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∫–∞–∫ true
        const isActive = hero.isActive !== false; 
        console.log(`üîç Hero ${hero.id} (${hero.title}): isActive = ${hero.isActive} -> ${isActive}`);
        return isActive;
      })
      .map((hero: any) => {
        // –í —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã–µ –ª–µ–∂–∞—Ç –ø—Ä—è–º–æ –≤ –æ–±—ä–µ–∫—Ç–µ, –Ω–µ –≤ attributes
        console.log(`üé® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º hero ${hero.id}:`, {
          title: hero.title,
          imageDesktop: hero.imageDesktop?.url,
          imageMobile: hero.imageMobile?.url
        });

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const getImageUrl = (imageField: any, fallback: string) => {
          if (!imageField) {
            console.log(`‚ö†Ô∏è –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback: ${fallback}`);
            return fallback;
          }
          
          // –ü—Ä—è–º–æ–π URL –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
          if (imageField.url) {
            const url = `${STRAPI_URL}${imageField.url}`;
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${url}`);
            return url;
          }
          
          console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:`, imageField);
          return fallback;
        };

        const desktopImage = getImageUrl(hero.imageDesktop, '/banners/Banner1-1.jpg');
        const mobileImage = getImageUrl(hero.imageMobile, '/banners/Banner1-2.webp');

        const processedHero = {
          id: hero.id,
          title: hero.title || '',
          description: hero.description || '',
          imageDesktop: desktopImage,
          imageMobile: mobileImage,
          alt: hero.imageDesktop?.alternativeText || hero.title || 'Hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
          link: hero.link || '/',
          isActive: hero.isActive !== false,
          order: hero.order || 0
        };

        console.log(`üé® –û–±—Ä–∞–±–æ—Ç–∞–Ω hero ${hero.id}:`, {
          title: processedHero.title,
          desktop: processedHero.imageDesktop,
          mobile: processedHero.imageMobile,
          order: processedHero.order
        });

        return processedHero;
      })
      .sort((a: SliderSlide, b: SliderSlide) => a.order - b.order);

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${slides.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö heroes`);

    return NextResponse.json({
      success: true,
      slides,
      total: slides.length,
      source: 'strapi-heroes',
      strapiUrl: STRAPI_URL
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Heroes API:', error);
    return getFallbackResponse();
  }
}

function getFallbackResponse() {
  const defaultSlides: SliderSlide[] = [
    {
      id: 1,
      title: "–î–û–õ–Ø–ú–ò",
      description: "–î–æ-–õ—è-–ú–∏",
      imageDesktop: "/banners/Banner2-1.jpg",
      imageMobile: "/banners/Banner2-2.webp",
      alt: "–î–æ-–õ—è-–ú–∏",
      link: "/catalog",
      isActive: true,
      order: 1
    },
    {
      id: 2,
      title: "100500",
      description: "–°–∫–∏–¥–∫–∏",
      imageDesktop: "/banners/Banner3-1.jpg",
      imageMobile: "/banners/Banner3-2.webp",
      alt: "–°–∫–∏–¥–∫–∏",
      link: "/catalog",
      isActive: true,
      order: 2
    },
    {
      id: 3,
      title: "–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ô –ó–ê–ö–ê–ó",
      description: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑",
      imageDesktop: "/banners/Banner4-1.jpg",
      imageMobile: "/banners/Banner4-2.webp",
      alt: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑",
      link: "https://t.me/TIGRSHOPsupport",
      isActive: true,
      order: 3
    },
    {
      id: 4,
      title: "–®–ò–†–û–ö–ò–ô –ê–°–°–û–†–¢–ò–ú–ï–ù–¢ –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–• –ë–†–ï–ù–î–û–í",
      description: "–ö–∞—Ç–∞–ª–æ–≥",
      imageDesktop: "/banners/Banner1-1.jpg",
      imageMobile: "/banners/Banner1-2.webp",
      alt: "–ö–∞—Ç–∞–ª–æ–≥",
      link: "/catalog",
      isActive: true,
      order: 4
    },
    {
      id: 5,
      title: "–û–ü–¢–û–í–´–ô –ó–ê–ö–ê–ó",
      description: "–û–ø—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑",
      imageDesktop: "/banners/Banner5-1.jpg",
      imageMobile: "/banners/Banner5-2.webp",
      alt: "–û–ø—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑",
      link: "https://t.me/TIGRSHOPsupport",
      isActive: true,
      order: 5
    }
  ];

  console.log(`‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback —Å–ª–∞–π–¥—ã (${defaultSlides.length} —à—Ç.)`);
  
  return NextResponse.json({
    success: false,
    slides: defaultSlides,
    error: 'Strapi –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å–ª–∞–π–¥—ã',
    total: defaultSlides.length,
    source: 'fallback'
  });
}