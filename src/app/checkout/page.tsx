// src/app/checkout/page.tsx - –ò–°–ü–†–ê–í–õ–ï–ù –î–õ–Ø –ü–†–û–ú–û–ö–û–î–û–í
'use client';

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { useCart } from '@/contexts/CartContext';
import { createPayment, formatCartItemsForPayment } from '@/services/paymentService';
import NewCheckoutForm from '@/components/Checkout/newChekoutForm';
import NewOrderSummary from '@/components/Checkout/newCheckoutSummary';

const CheckoutPage: React.FC = () => {
  const { items, clearCart } = useCart();
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(true);
  const [isProcessing, setIsProcessing] = useState(false);
  const [isProcessingPayment, setIsProcessingPayment] = useState(false);
  const [orderCompleted, setOrderCompleted] = useState(false);
  
  const [selectedDelivery, setSelectedDelivery] = useState('store_pickup');
  const [selectedPayment, setSelectedPayment] = useState('card');

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 100);

    return () => clearTimeout(timer);
  }, []);

  // –†–µ–¥–∏—Ä–µ–∫—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –ò –∑–∞–∫–∞–∑ –ù–ï –∑–∞–≤–µ—Ä—à–µ–Ω
  useEffect(() => {
    if (!isLoading && items.length === 0 && !orderCompleted && !isProcessing && !isProcessingPayment) {
      console.log('üîÑ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
      router.push('/');
    }
  }, [items, router, isLoading, orderCompleted, isProcessing, isProcessingPayment]);

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º
  const processPayment = async (orderData: any, orderResponse: any) => {
    if (orderData.paymentMethod === 'card' && orderResponse.orderId) {
      console.log('üí≥ –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ –ÆKassa');
      console.log('üí∞ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ÆKassa:', orderData.total);
      
      setIsProcessingPayment(true);
      
      try {
        const paymentData = {
          // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –° –ü–†–û–ú–û–ö–û–î–û–ú
          amount: orderData.total, // ‚Üê –≠—Ç–æ —Ü–µ–Ω–∞ —É–∂–µ –° –ø—Ä–æ–º–æ–∫–æ–¥–æ–º!
          orderId: orderResponse.orderId,
          customerEmail: orderData.customerInfo.email,
          customerPhone: orderData.customerInfo.phone,
          description: `–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ #${orderResponse.orderNumber || orderResponse.orderId} –≤ Tigr Shop`,
          returnUrl: `${window.location.origin}/order-success?orderNumber=${orderResponse.orderNumber}`,
          items: formatCartItemsForPayment(items)
        };

        console.log('üî• –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa –Ω–∞ —Å—É–º–º—É:', paymentData.amount);

        const paymentResponse = await createPayment(paymentData);
        
        if (paymentResponse.success && paymentResponse.confirmationUrl) {
          console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ÆKassa');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
          localStorage.setItem('pendingPaymentId', paymentResponse.paymentId || '');
          localStorage.setItem('pendingOrderId', orderResponse.orderId || '');
          localStorage.setItem('finalAmount', orderData.total.toString()); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—É–º–º—É
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ÆKassa
          window.location.href = paymentResponse.confirmationUrl;
          return;
          
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', paymentResponse.error);
          throw new Error(paymentResponse.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
        }

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
        setIsProcessingPayment(false);
        throw error;
      }
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
      console.log('üì¶ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –±–µ–∑ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å—É–º–º—É:', orderData.total);
      clearCart();
      setOrderCompleted(true);
      
      router.push(`/order-success?orderNumber=${orderResponse.orderNumber}`);
    }
  };

  // ‚úÖ –£–î–ê–õ–ò–õ–ò calculateTotal() - —Ç–µ–ø–µ—Ä—å —Ü–µ–Ω—É –ø–µ—Ä–µ–¥–∞–µ—Ç NewOrderSummary

  // ‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö: –ü–æ–ª—É—á–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –æ—Ç NewOrderSummary
  const handleOrderSubmit = async (orderData: any) => {
    if (isProcessing || isProcessingPayment) return;
    
    console.log('üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –û–ë–†–ê–ë–û–¢–ö–£ –ó–ê–ö–ê–ó–ê');
    console.log('üìã –î–∞–Ω–Ω—ã–µ –æ—Ç NewOrderSummary:', orderData);
    console.log('üí∞ –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º:', orderData.total);
    console.log('üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', orderData.paymentMethod || selectedPayment);
    
    setIsProcessing(true);
    
    try {
      // –í–∞–ª–∏–¥–∞—Ü–∏—è
      if (!orderData.firstName?.trim() || !orderData.phone?.trim()) {
        throw new Error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω');
      }

      if (items.length === 0) {
        throw new Error('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
      }

      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –æ—Ç NewOrderSummary
      const orderPayload = {
        customerInfo: {
          name: orderData.firstName.trim(),
          phone: orderData.phone.trim(),
          email: orderData.email?.trim() || '',
        },
        items: items.map(item => ({
          productId: item.id || item.article,
          productName: item.name || item.title,
          //@ts-ignore
          size: item.selectedSize || item.size,
          quantity: item.quantity,
          priceAtTime: item.price,
        })),
        // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º
        totalAmount: orderData.total, // ‚Üê –¶–µ–Ω–∞ –° –ü–†–û–ú–û–ö–û–î–û–ú –æ—Ç NewOrderSummary!
        deliveryMethod: selectedDelivery,
        paymentMethod: orderData.paymentMethod || selectedPayment,
        deliveryAddress: orderData.city && orderData.address 
          ? `${orderData.city.trim()}, ${orderData.address.trim()}`
          : '',
        notes: orderData.notes?.trim() || '',
        
        // ‚úÖ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–º–æ–∫–æ–¥–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        originalTotal: orderData.subtotal + (orderData.deliveryPrice || 0),
        promoDiscount: orderData.promoDiscount || 0,
        appliedPromoCode: orderData.appliedPromoCode || null
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ Strapi –Ω–∞ —Å—É–º–º—É:', orderPayload.totalAmount);
      console.log('üéüÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥:', orderPayload.appliedPromoCode?.code || '–ù–ï–¢');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API –∑–∞–∫–∞–∑–æ–≤
      const token = localStorage.getItem('authToken');
      const response = await fetch('/api/orders', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          ...(token ? { Authorization: `Bearer ${token}` } : {})
        },
        body: JSON.stringify(orderPayload)
      });

      const orderResponse = await response.json();

      if (!response.ok) {
        throw new Error(orderResponse.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞');
      }

      console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –≤ Strapi:', orderResponse);

      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–¥–∞–µ–º orderData —Å —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω–æ–π
      console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—É–º–º—É:', orderData.total);
      
      // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω–æ–π
      const paymentOrderData = {
        ...orderPayload,
        total: orderData.total, // ‚Üê –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ÆKassa
        customerInfo: orderPayload.customerInfo,
        paymentMethod: orderPayload.paymentMethod
      };
      
      await processPayment(paymentOrderData, orderResponse);

    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:', error);
      alert(`–û—à–∏–±–∫–∞: ${error.message}`);
      
      setIsProcessing(false);
      setIsProcessingPayment(false);
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è...</p>
        </div>
      </div>
    );
  }

  // –ö–∞—Ä—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  const cartItems = items.map(item => ({
    id: item.id || item.article || '',
    name: item.name || item.title || '–¢–æ–≤–∞—Ä',
    price: item.price || 0,
    quantity: item.quantity || 1,
    image: item.images?.[0] || item.photo || item.image || '',
    size: item.size || '',
    article: item.article || item.id || ''
  }));

  return (
    <div className="min-h-screen lg:bg-[#E5DDD4] bg-white">
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="min-h-screen">
        {/* Desktop Layout - 2 –∫–æ–ª–æ–Ω–∫–∏ */}
        <div className="hidden lg:block">
          <div className="grid grid-cols-2 min-h-screen">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –§–æ—Ä–º–∞ */}
            <div className="bg-[#E5DDD4] pl-[70px] pr-[20px] pt-8 pb-16">
              <NewCheckoutForm
                cartItems={cartItems}
                onSubmit={handleOrderSubmit}
                selectedDelivery={selectedDelivery}
                selectedPayment={selectedPayment}
                onDeliveryChange={setSelectedDelivery}
                onPaymentChange={setSelectedPayment}
                isMobile={false}
                isProcessing={isProcessing || isProcessingPayment}
              />
            </div>
                     
            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
            <div className="bg-white pl-[20px] pr-[70px] py-8">
              <NewOrderSummary
                cartItems={cartItems}
                onSubmit={handleOrderSubmit}
                selectedDelivery={selectedDelivery}
                selectedPayment={selectedPayment}
                isMobile={false}
                isProcessing={isProcessing || isProcessingPayment}
              />
            </div>
          </div>
        </div>

        {/* Mobile Layout - 1 –∫–æ–ª–æ–Ω–∫–∞ —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º */}
        <div className="lg:hidden bg-white min-h-screen">
          {/* –§–æ—Ä–º–∞ —Å–≤–µ—Ä—Ö—É */}
          <div className="px-[10px] py-6 space-y-6">
            <NewCheckoutForm
              cartItems={cartItems}
              onSubmit={handleOrderSubmit}
              selectedDelivery={selectedDelivery}
              selectedPayment={selectedPayment}
              onDeliveryChange={setSelectedDelivery}
              onPaymentChange={setSelectedPayment}
              isMobile={true}
              isProcessing={isProcessing || isProcessingPayment}
            />
          </div>
                   
          {/* –ë–µ–ª—ã–π –±–ª–æ–∫ —Å–Ω–∏–∑—É */}
          <div className="bg-white px-[10px] py-6">
            <NewOrderSummary
              cartItems={cartItems}
              onSubmit={handleOrderSubmit}
              selectedDelivery={selectedDelivery}
              selectedPayment={selectedPayment}
              isMobile={true}
              isProcessing={isProcessing || isProcessingPayment}
            />
          </div>
        </div>
      </main>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ */}
      {isProcessingPayment && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white p-6 rounded-lg text-center max-w-sm mx-4">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <h3 className="text-lg font-semibold mb-2">–°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂</h3>
            <p className="text-gray-600">–°–µ–π—á–∞—Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–º –≤–∞—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –ÆKassa...</p>
          </div>
        </div>
      )}
    </div>
  );
};

export default CheckoutPage;