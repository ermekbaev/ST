// src/app/checkout/page.tsx
'use client';

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { useCart } from '@/contexts/CartContext';
import NewCheckoutForm from '@/components/Checkout/newChekoutForm';
import NewOrderSummary from '@/components/Checkout/newCheckoutSummary';

const CheckoutPage: React.FC = () => {
  const { items, clearCart } = useCart();
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(true);
  
  // ‚úÖ –û–ë–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –î–õ–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
  const [selectedDelivery, setSelectedDelivery] = useState('store_pickup');
  const [selectedPayment, setSelectedPayment] = useState('card');

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 100);

    return () => clearTimeout(timer);
  }, []);

  // –†–µ–¥–∏—Ä–µ–∫—Ç –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
  useEffect(() => {
    if (!isLoading && items.length === 0) {
      router.push('/');
    }
  }, [items, router, isLoading]);

  // ‚úÖ –ü–†–û–°–¢–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–¢–ü–†–ê–í–ö–ò –ó–ê–ö–ê–ó–ê
  const handleOrderSubmit = async (orderData: any) => {
    try {
      console.log('üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞:', orderData);
      
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å –∫ –≤–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É
      const response = await fetch('/api/orders', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          ...orderData,
          deliveryMethod: selectedDelivery,
          paymentMethod: selectedPayment,
          cartItems: items,
          timestamp: new Date().toISOString()
        }),
      });

      if (response.ok) {
        const result = await response.json();
        console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', result);
        
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—Ö–∞
        clearCart();
        router.push(`/checkout/success?orderId=${result.orderId}`);
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫–∞–∑–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫
  if (isLoading) {
    return (
      <div className="min-h-screen lg:bg-[#E5DDD4] bg-white flex items-center justify-center">
        <div className="text-xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (items.length === 0) {
    return (
      <div className="min-h-screen lg:bg-[#E5DDD4] bg-white flex items-center justify-center">
        <div className="text-center">
          <h2 className="text-2xl font-bold mb-4">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
          <p className="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
          <button
            onClick={() => router.push('/')}
            className="bg-black text-white px-6 py-3 font-medium hover:bg-gray-800 transition-colors"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º
          </button>
        </div>
      </div>
    );
  }

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–æ–≤–∞—Ä—ã –∫–æ—Ä–∑–∏–Ω—ã –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
  const cartItems = items.map(item => ({
    id: item.id || item.article || '',
    name: item.name || item.title || '',
    price: item.price || 0,
    quantity: item.quantity || 1,
    image: item.image || item.photo || item.images?.[0] || '',
    photo: item.photo || item.image || '',
    size: item.size || '',
    article: item.article || item.id || ''
  }));

  return (
    <div className="min-h-screen lg:bg-[#E5DDD4] bg-white">
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="min-h-screen">
        {/* Desktop Layout - 2 –∫–æ–ª–æ–Ω–∫–∏ */}
        <div className="hidden lg:block">
          <div className="grid grid-cols-2 min-h-screen">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –§–æ—Ä–º–∞ */}
            <div className="bg-[#E5DDD4] pl-[70px] pr-[20px] pt-8 pb-16">
              <NewCheckoutForm
                cartItems={cartItems}
                onSubmit={handleOrderSubmit}
                selectedDelivery={selectedDelivery}
                selectedPayment={selectedPayment}
                onDeliveryChange={setSelectedDelivery}
                onPaymentChange={setSelectedPayment}
                isMobile={false}
              />
            </div>
                     
            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
            <div className="bg-white pl-[20px] pr-[70px] py-8">
              <NewOrderSummary
                cartItems={cartItems}
                onSubmit={handleOrderSubmit}
                selectedDelivery={selectedDelivery}
                selectedPayment={selectedPayment}
                isMobile={false}
              />
            </div>
          </div>
        </div>

        {/* Mobile Layout - 1 –∫–æ–ª–æ–Ω–∫–∞ —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º */}
        <div className="lg:hidden bg-white min-h-screen">
          {/* –§–æ—Ä–º–∞ —Å–≤–µ—Ä—Ö—É */}
          <div className="px-[10px] py-6 space-y-6">
            <NewCheckoutForm
              cartItems={cartItems}
              onSubmit={handleOrderSubmit}
              selectedDelivery={selectedDelivery}
              selectedPayment={selectedPayment}
              onDeliveryChange={setSelectedDelivery}
              onPaymentChange={setSelectedPayment}
              isMobile={true}
            />
          </div>
                   
          {/* –ë–µ–ª—ã–π –±–ª–æ–∫ —Å–Ω–∏–∑—É */}
          <div className="bg-white px-[10px] py-6">
            <NewOrderSummary
              cartItems={cartItems}
              onSubmit={handleOrderSubmit}
              selectedDelivery={selectedDelivery}
              selectedPayment={selectedPayment}
              isMobile={true}
            />
          </div>
        </div>
      </main>
    </div>
  );
};

export default CheckoutPage;