// src/app/order-success/page.tsx - –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –° –ü–†–û–í–ï–†–ö–û–ô –ù–ï–ó–ê–í–ï–†–®–ï–ù–ù–´–• –ü–õ–ê–¢–ï–ñ–ï–ô
'use client';

import SuccessHero from '@/components/OrderSuccess/SuccessHero';
import React, { Suspense, useEffect } from 'react';
import { useSearchParams } from 'next/navigation';
import { useCart } from '@/contexts/CartContext'; // üî• –î–û–ë–ê–í–õ–ï–ù–û

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç useSearchParams
const OrderSuccessContent: React.FC = () => {
  const searchParams = useSearchParams();
  const { clearCart } = useCart(); // üî• –î–û–ë–ê–í–õ–ï–ù–û
  
  const orderNumber = searchParams.get('orderNumber') || undefined;
  const paymentId = searchParams.get('paymentId') || undefined;
  
  // üî• –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
  useEffect(() => {
    const pendingPaymentId = localStorage.getItem('pendingPaymentId');
    const pendingOrderId = localStorage.getItem('pendingOrderId');
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂, –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ localStorage
    if (paymentId && paymentId === pendingPaymentId) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç —Å –ÆKassa, –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É');
      clearCart();
      localStorage.removeItem('pendingPaymentId');
      localStorage.removeItem('pendingOrderId');
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –±–µ–∑ paymentId, –Ω–æ –µ—Å—Ç—å pending - –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∞
    if (!paymentId && pendingPaymentId) {
      console.log('‚ö†Ô∏è –í–æ–∑–≤—Ä–∞—Ç –±–µ–∑ paymentId - –≤–æ–∑–º–æ–∂–Ω–æ –ø–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω');
      // –ù–ï –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
    }
  }, [paymentId, clearCart]);

  console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—Ö–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', {
    orderNumber,
    paymentId,
    hasPayment: !!paymentId
  });

  return <SuccessHero orderNumber={orderNumber} paymentId={paymentId} />;
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å Suspense
const OrderSuccessPage: React.FC = () => {
  return (
    <div className="min-h-screen bg-white">
      <Suspense fallback={
        <div className="min-h-screen bg-white flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto mb-4"></div>
            <p className="font-product text-gray-600">–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞...</p>
          </div>
        </div>
      }>
        <OrderSuccessContent />
      </Suspense>
    </div>
  );
};

export default OrderSuccessPage;