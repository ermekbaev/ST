// src/components/Checkout/NewCheckoutForm.tsx - –ò–°–ü–†–ê–í–õ–ï–ù–û
'use client';

import React, { useState, useCallback } from 'react';
import { useForm } from 'react-hook-form';

interface CheckoutFormData {
  // –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  firstName: string;
  email: string;
  phone: string;
  city: string;

  // –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
  address: string;
  region: string;
  postalCode: string;

  // –ü–æ–ª—É—á–∞—Ç–µ–ª—å
  recipientFirstName: string;
  recipientPhone: string;

  // –í—ã–±–æ—Ä –º–µ—Ç–æ–¥–æ–≤
  deliveryMethod: string;
  paymentMethod: string;
}

interface CartItem {
  id: string;
  name: string;
  price: number;
  quantity: number;
  image?: string;
  size?: string;
}

interface NewCheckoutFormProps {
  cartItems: CartItem[];
  onSubmit: (data: CheckoutFormData) => void;
  selectedDelivery: string;
  selectedPayment: string;
  onDeliveryChange: (deliveryId: string) => void;
  onPaymentChange: (paymentId: string) => void;
  isMobile?: boolean;
  isProcessing?: boolean;
  // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
  getPromoData?: () => any;
}

// ============================================================================
// –ö–û–ù–°–¢–ê–ù–¢–´ –î–ê–ù–ù–´–•
// ============================================================================

const DELIVERY_OPTIONS = [
  { id: 'store_pickup', name: '–î–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω TS', price: 0 },
  { id: 'courier_ts', name: '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º TS', price: 0 },
  { id: 'cdek_pickup', name: '–°–î–≠–ö - –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏', price: 300 },
  { id: 'cdek_courier', name: '–°–î–≠–ö - –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º', price: 500 }
];

const PAYMENT_OPTIONS = [
  { id: 'card', name: '–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π (–ú–ò–†, VISA, MasterCard)' },
  { id: 'cash_vladivostok', name: '–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –≤ –≥–æ—Ä–æ–¥–µ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫' }
];

// ============================================================================
// –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ - –¢–û–õ–¨–ö–û –§–û–†–ú–ê
// ============================================================================

const NewCheckoutForm: React.FC<NewCheckoutFormProps> = ({ 
  cartItems, 
  onSubmit, 
  selectedDelivery,
  selectedPayment,
  onDeliveryChange,
  onPaymentChange,
  isMobile = false,
  isProcessing = false,
  getPromoData, // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û
}) => {
  // ============================================================================
  // –°–û–°–¢–û–Ø–ù–ò–ï –ò –§–û–†–ú–ê
  // ============================================================================
  
  const [isSubmitting, setIsSubmitting] = useState(false);

  // ‚úÖ –ü–†–û–°–¢–ê–Ø –§–û–†–ú–ê –ë–ï–ó –í–ù–ï–®–ù–ò–• –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
  const form = useForm<CheckoutFormData>({
    defaultValues: {
      firstName: '',
      email: '',
      phone: '',
      city: '',
      address: '',
      region: '',
      postalCode: '',
      recipientFirstName: '',
      recipientPhone: '',
      deliveryMethod: 'store_pickup',
      paymentMethod: 'card'
    },
    mode: 'onChange'
  });

  const { register, watch, setValue, handleSubmit, formState: { errors } } = form;

  // ============================================================================
  // –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° –†–û–î–ò–¢–ï–õ–¨–°–ö–ò–ú –ö–û–ú–ü–û–ù–ï–ù–¢–û–ú
  // ============================================================================
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ props –≤ —Ñ–æ—Ä–º—É
  React.useEffect(() => {
    setValue('deliveryMethod', selectedDelivery);
    setValue('paymentMethod', selectedPayment);
  }, [selectedDelivery, selectedPayment, setValue]);

  // ============================================================================
  // –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ó–ù–ê–ß–ï–ù–ò–ô
  // ============================================================================
  
  const watchedDelivery = watch('deliveryMethod');
  const watchedPayment = watch('paymentMethod');

  // ============================================================================
  // –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
  // ============================================================================
  
  const handleDeliveryChange = useCallback((deliveryId: string) => {
    setValue('deliveryMethod', deliveryId, { shouldValidate: true });
    onDeliveryChange(deliveryId); // ‚úÖ –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  }, [setValue, onDeliveryChange]);

  const handlePaymentChange = useCallback((paymentId: string) => {
    setValue('paymentMethod', paymentId, { shouldValidate: true });
    onPaymentChange(paymentId); // ‚úÖ –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  }, [setValue, onPaymentChange]);

  // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏
  const onFormSubmit = useCallback(async (data: CheckoutFormData) => {
    if (isSubmitting || isProcessing) return;
    
    console.log('üöÄ NewCheckoutForm (react-hook-form): –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞');
    console.log('üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', data);
    console.log('üì± –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è:', isMobile);
    
    setIsSubmitting(true);
    try {
      // ‚úÖ –£–õ–£–ß–®–ï–ù–ù–û–ï –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö
      let promoData = null;
      if (getPromoData) {
        console.log('üîç –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤...');
        try {
          promoData = getPromoData();
          console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', promoData);
        } catch (error) {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', error);
        }
      } else {
        console.warn('‚ö†Ô∏è getPromoData –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ —Ñ–æ—Ä–º—É');
      }
      
      // ‚úÖ –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏
      const completeOrderData = {
        ...data,
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö –µ—Å–ª–∏ –µ—Å—Ç—å
        ...(promoData && {
          total: promoData.total,
          subtotal: promoData.subtotal,
          deliveryPrice: promoData.deliveryPrice,
          promoDiscount: promoData.promoDiscount,
          appliedPromoCode: promoData.appliedPromoCode
        })
      };
      
      console.log('üì§ NewCheckoutForm –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ:');
      console.log('üìã –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', completeOrderData);
      console.log('üí∞ –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:', completeOrderData.total || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê');
      console.log('üéüÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥:', completeOrderData.appliedPromoCode?.code || '–ù–ï–¢');
      console.log('üí∏ –°–∫–∏–¥–∫–∞:', completeOrderData.promoDiscount || 0);
      
      await onSubmit(completeOrderData);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
    } finally {
      setIsSubmitting(false);
    }
  }, [onSubmit, isSubmitting, isProcessing, getPromoData, isMobile]);

  // ============================================================================
  // –†–ï–ù–î–ï–† –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
  // ============================================================================

  // ‚úÖ –û–°–¢–ê–í–õ–ï–ù–û: –¢–æ—á–Ω–æ –∫–∞–∫ –±—ã–ª–æ, —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
  const renderInput = (
    name: keyof CheckoutFormData, 
    placeholder: string, 
    type: string = 'text'
  ) => (
    <div>
      <input
        {...register(name, {
          // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è
          required: `${placeholder} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`,
        })}
        type={type}
        placeholder={placeholder}
        className={`checkout-input ${isMobile ? 'checkout-input--mobile' : ''}`}
      />
      {errors[name] && (
        <p className={`checkout-error ${isMobile ? 'checkout-error--mobile' : ''}`}>
          {errors[name]?.message}
        </p>
      )}
    </div>
  );

  const renderDeliveryOptions = () => (
    <div className="checkout-checkbox-group">
      {DELIVERY_OPTIONS.map((option) => (
        <label 
          key={option.id}
          className="checkout-checkbox-item"
          onClick={() => handleDeliveryChange(option.id)}
        >
          <input
            type="radio"
            {...register('deliveryMethod')}
            value={option.id}
            className="sr-only"
            tabIndex={-1}
          />
          <div 
            className={`checkout-checkbox ${
              selectedDelivery === option.id ? 'checkout-checkbox--checked' : ''
            }`} 
          />
          <span className={`checkout-checkbox-label ${
            isMobile ? 'checkout-checkbox-label--mobile' : ''
          }`}>
            {option.name}
            {option.price > 0 && ` (+${option.price} ‚ÇΩ)`}
          </span>
        </label>
      ))}
    </div>
  );

  const renderPaymentOptions = () => (
    <div className="checkout-checkbox-group">
      {PAYMENT_OPTIONS.map((option) => (
        <label 
          key={option.id}
          className="checkout-checkbox-item"
          onClick={() => handlePaymentChange(option.id)}
        >
          <input
            type="radio"
            {...register('paymentMethod')}
            value={option.id}
            className="sr-only"
            tabIndex={-1}
          />
          <div 
            className={`checkout-checkbox ${
              selectedPayment === option.id ? 'checkout-checkbox--checked' : ''
            }`} 
          />
          <span className={`checkout-checkbox-label ${
            isMobile ? 'checkout-checkbox-label--mobile' : ''
          }`}>
            {option.name}
          </span>
        </label>
      ))}
    </div>
  );

  // ============================================================================
  // –û–°–ù–û–í–ù–û–ô –†–ï–ù–î–ï–† - –¢–û–õ–¨–ö–û –§–û–†–ú–ê
  // ============================================================================

  return (
    <form onSubmit={handleSubmit(onFormSubmit)} className="space-y-8" id="checkout-form">
      
      {/* –õ–ò–ß–ù–´–ï –î–ê–ù–ù–´–ï - –¢–û–ß–ù–û –ö–ê–ö –ë–´–õ–û */}
      <div className="space-y-6">
        <h2 className={isMobile ? 'checkout-section-title--mobile' : 'checkout-section-title'}>
          –õ–ò–ß–ù–´–ï –î–ê–ù–ù–´–ï
        </h2>
        <div className="space-y-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
            {renderInput('firstName', '–ò–º—è, —Ñ–∞–º–∏–ª–∏—è')}
            {renderInput('phone', '–¢–µ–ª–µ—Ñ–æ–Ω', 'tel')}
          </div>
          {renderInput('email', 'E-mail', 'email')}
          {renderInput('city', '–ì–æ—Ä–æ–¥')}
        </div>
      </div>

      {/* –°–ü–û–°–û–ë –î–û–°–¢–ê–í–ö–ò - –¢–û–ß–ù–û –ö–ê–ö –ë–´–õ–û */}
      <div className="space-y-6">
        <h2 className={isMobile ? 'checkout-section-title--mobile' : 'checkout-section-title'}>
          –°–ü–û–°–û–ë –î–û–°–¢–ê–í–ö–ò
        </h2>
        {renderDeliveryOptions()}
      </div>

      {/* –ê–î–†–ï–° –î–û–°–¢–ê–í–ö–ò - –¢–û–ß–ù–û –ö–ê–ö –ë–´–õ–û */}
      <div className="space-y-6">
        <h2 className={isMobile ? 'checkout-section-title--mobile' : 'checkout-section-title'}>
          –ê–î–†–ï–° –î–û–°–¢–ê–í–ö–ò
        </h2>
        <div className="space-y-4">
          {renderInput('address', '–ê–¥—Ä–µ—Å')}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
            {renderInput('region', '–†–µ–≥–∏–æ–Ω')}
            {renderInput('postalCode', '–ò–Ω–¥–µ–∫—Å')}
          </div>
        </div>
      </div>

      {/* –ü–û–õ–£–ß–ê–¢–ï–õ–¨ - –¢–û–ß–ù–û –ö–ê–ö –ë–´–õ–û */}
      <div className="space-y-6">
        <h2 className={isMobile ? 'checkout-section-title--mobile' : 'checkout-section-title'}>
          –ü–û–õ–£–ß–ê–¢–ï–õ–¨
        </h2>
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
          {renderInput('recipientFirstName', '–ò–º—è, —Ñ–∞–º–∏–ª–∏—è')}
          {renderInput('recipientPhone', '–¢–µ–ª–µ—Ñ–æ–Ω', 'tel')}
        </div>
      </div>

      {/* –°–ü–û–°–û–ë –û–ü–õ–ê–¢–´ - –¢–û–ß–ù–û –ö–ê–ö –ë–´–õ–û */}
      <div className="space-y-6">
        <h2 className={isMobile ? 'checkout-section-title--mobile' : 'checkout-section-title'}>
          –°–ü–û–°–û–ë –û–ü–õ–ê–¢–´
        </h2>
        {renderPaymentOptions()}
      </div>

      {/* ‚úÖ –ö–ù–û–ü–ö–ê –¢–û–õ–¨–ö–û –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–´–• (—Ç–µ–ø–µ—Ä—å —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏!) */}
      {isMobile && (
        <div className="space-y-4">
          <button
            type="submit"
            disabled={isSubmitting || isProcessing}
            className="w-full bg-black text-white py-4 text-lg font-medium hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {isSubmitting || isProcessing ? '–û–§–û–†–ú–õ–Ø–ï–ú –ó–ê–ö–ê–ó...' : '–û–§–û–†–ú–ò–¢–¨ –ó–ê–ö–ê–ó'}
          </button>
          
          {/* –°–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ */}
          <div className="checkout-terms-text--mobile">
            –û—Ñ–æ—Ä–º–ª—è—è –∑–∞–∫–∞–∑, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º, –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –î–æ–≥–æ–≤–æ—Ä–æ–º –æ—Ñ–µ—Ä—Ç—ã.
          </div>
        </div>
      )}

    </form>
  );
};

export default NewCheckoutForm;