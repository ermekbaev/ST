'use client';

import React, { useState, useEffect, useCallback, JSX } from 'react';
import { useRouter } from 'next/navigation';
import { useCart } from '../../../contexts/CartContext';
import AuthModal from '../../Auth/AuthModal';
import SmartProfileIcon from '@/components/Auth/SmartProfileicon';

interface MegaMenuData {
  title: string;
  categories: string[];
  subcategories: string[];
  additional?: string[];
  links?: Record<string, string>; 
}

type MenuKey = '–æ–±—É–≤—å' | '–æ–¥–µ–∂–¥–∞' | '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã' | '–∫–æ–ª–ª–µ–∫—Ü–∏–∏' | '–¥—Ä—É–≥–æ–µ' | '–±—Ä–µ–Ω–¥—ã' | '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è';

const DesktopHeader: React.FC = () => {
  const router = useRouter(); // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º useRouter
  const [mounted, setMounted] = useState<boolean>(false);
  const [activeMenu, setActiveMenu] = useState<string | null>(null);
  const [isSearchOpen, setIsSearchOpen] = useState<boolean>(false);
  const [searchQuery, setSearchQuery] = useState<string>('');
  const [showAuthModal, setShowAuthModal] = useState<boolean>(false);
  const { totalItems, toggleCart } = useCart();
  
  useEffect(() => {
    setMounted(true);
  }, []);

  const megaMenuData: Record<MenuKey, MegaMenuData> = {
    '–æ–±—É–≤—å': {
      title: '–û–ë–£–í–¨',
      categories: [
        '–≤—Å–µ',
        '–∫–µ–¥—ã –∏ –∫—Ä–æ—Å—Å–æ–≤–∫–∏',
        '–±–æ—Ç–∏–Ω–∫–∏ –∏ —É–≥–≥–∏',
        '—Å–ª—ç–¥—ã',
        '–¥–µ—Ç—Å–∫–∞—è –æ–±—É–≤—å'
      ],
      links: {
        '–≤—Å–µ': '/catalog',
        '–∫–µ–¥—ã –∏ –∫—Ä–æ—Å—Å–æ–≤–∫–∏': '/catalog?categories=–ö—Ä–æ—Å–æ–≤–∫–∏+–∏+–∫–µ–¥—ã',
        '–±–æ—Ç–∏–Ω–∫–∏ –∏ —É–≥–≥–∏': '/catalog',
        '—Å–ª—ç–¥—ã': '/catalog',
        '–¥–µ—Ç—Å–∫–∞—è –æ–±—É–≤—å': '/catalog'
      },
      subcategories: [
        '–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã',
        '—ç–∫—Å–∫–ª—é–∑–∏–≤—ã',
        '–º–∞—Å—Ç—Ö—ç–≤',
        '—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂',
        '–∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏'
      ]
    },
    '–æ–¥–µ–∂–¥–∞': {
      title: '–û–î–ï–ñ–î–ê',
      categories: [
        '–≤—Å–µ',
        '–∫—É—Ä—Ç–∫–∏ –∏ –ø—É—Ö–æ–≤–∏–∫–∏',
        '—Ñ—É—Ç–±–æ–ª–∫–∏ –∏ –ª–æ–Ω–≥—Å–ª–∏–≤—ã',
        '—à—Ç–∞–Ω—ã –∏ –¥–∂–∏–Ω—Å—ã',
        '—à–æ—Ä—Ç—ã'
      ],
      links: {
        '–≤—Å–µ': '/catalog',
        '–∫—É—Ä—Ç–∫–∏ –∏ –ø—É—Ö–æ–≤–∏–∫–∏': '/catalog?categories=–ü—É—Ö–æ–≤–∏–∫–∏+–∏+–∫—É—Ä—Ç–∫–∏',
        '—Ñ—É—Ç–±–æ–ª–∫–∏ –∏ –ª–æ–Ω–≥—Å–ª–∏–≤—ã': '/catalog?categories=–§—É—Ç–±–æ–ª–∫–∏+–∏+–ø–æ–ª–æ',
        '—à—Ç–∞–Ω—ã –∏ –¥–∂–∏–Ω—Å—ã': '/catalog?categories=–®—Ç–∞–Ω—ã+–∏+–±—Ä—é–∫–∏',
        '—à–æ—Ä—Ç—ã': '/catalog?categories=–®–æ—Ä—Ç—ã',
        '—Ö—É–¥–∏ –∏ —Å–≤–∏—Ç—à–æ—Ç—ã': '/catalog?categories=–¢–æ–ª—Å—Ç–æ–≤–∫–∏+–∏+—Å–≤–∏—Ç—à–æ—Ç—ã'
      },
      subcategories: [
        '—Ö—É–¥–∏ –∏ —Å–≤–∏—Ç—à–æ—Ç—ã',
        '–¥—Ä—É–≥–∞—è –æ–¥–µ–∂–¥–∞'
      ],
      additional: [
        '–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã',
        '—ç–∫—Å–∫–ª—é–∑–∏–≤—ã',
        '–º–∞—Å—Ç—Ö—ç–≤',
        '—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂',
        '–∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏'
      ]
    },
    '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã': {
      title: '–ê–ö–°–ï–°–°–£–ê–†–´',
      categories: [
        '–≤—Å–µ',
        '–±–µ–ª—å–µ',
        '–≥–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã',
        '—Ä—é–∫–∑–∞–∫–∏ –∏ —Å—É–º–∫–∏',
        '–∫–æ—à–µ–ª—å–∫–∏'
      ],
      links: {
        '–≤—Å–µ': '/catalog?categories=–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã',
        '–±–µ–ª—å–µ': '/catalog',
        '–≥–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã': '/catalog',
        '—Ä—é–∫–∑–∞–∫–∏ –∏ —Å—É–º–∫–∏': '/catalog?categories=–°—É–º–∫–∏+–∏+—Ä—é–∫–∑–∞–∫–∏',
        '–∫–æ—à–µ–ª—å–∫–∏': '/catalog'
      },
      subcategories: [
        '–æ—á–∫–∏',
        '–¥—Ä—É–≥–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã'
      ],
      additional: [
        '–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã',
        '—ç–∫—Å–∫–ª—é–∑–∏–≤—ã',
        '–º–∞—Å—Ç—Ö—ç–≤',
        '—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂',
        '–∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏'
      ]
    },
    '–∫–æ–ª–ª–µ–∫—Ü–∏–∏': {
      title: '–ö–û–õ–õ–ï–ö–¶–ò–ò',
      categories: [
        '–≤—Å–µ',
        '–¥—Ä—É–≥–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã',
        '—Ñ–∏–≥—É—Ä–∫–∏',
        '–ø—Ä–µ–¥–º–µ—Ç—ã –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞',
        '–¥—Ä—É–≥–æ–µ –≤—Å—ë'
      ],
      links: {
        '–≤—Å–µ': '/catalog?categories=–ö–æ–ª–ª–µ–∫—Ü–∏—è',
        '–¥—Ä—É–≥–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã': '/catalog',
        '—Ñ–∏–≥—É—Ä–∫–∏': '/catalog',
        '–ø—Ä–µ–¥–º–µ—Ç—ã –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞': '/catalog',
        '–¥—Ä—É–≥–æ–µ –≤—Å—ë': '/catalog'
      },
      subcategories: [
        '–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã',
        '—ç–∫—Å–∫–ª—é–∑–∏–≤—ã',
        '–º–∞—Å—Ç—Ö—ç–≤',
        '—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂',
        '–∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏'
      ]
    },
    '–¥—Ä—É–≥–æ–µ': {
      title: '–î–†–£–ì–û–ï',
      categories: [
        '–≤—Å–µ',
        '—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
        '—Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞',
        '—Å–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö',
        '–∫—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ'
      ],
      subcategories: [
        '–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã',
        '—ç–∫—Å–∫–ª—é–∑–∏–≤—ã',
        '–º–∞—Å—Ç—Ö—ç–≤',
        '—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂',
        '–∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏'
      ]
    },
    '–±—Ä–µ–Ω–¥—ã': {
      title: '–ë–†–ï–ù–î–´',
      categories: [
        '–≤—Å–µ',
        'nike',
        'adidas',
        'puma',
        'reebok'
      ],
      links: {
        '–≤—Å–µ': '/catalog',
        'nike': '/catalog?brands=Nike',
        'adidas': '/catalog?brands=Adidas',
        'puma': '/catalog?brands=Puma',
        'reebok': '/catalog?brands=Reebok'
      },
      subcategories: [
        '–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã',
        '—ç–∫—Å–∫–ª—é–∑–∏–≤—ã',
        '–º–∞—Å—Ç—Ö—ç–≤',
        '—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂',
        '–∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏'
      ]
    },
    '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': {
      title: '–ò–ù–§–û–†–ú–ê–¶–ò–Ø',
      categories: [
        '–∫–æ–Ω—Ç–∞–∫—Ç—ã',
        '–¥–æ—Å—Ç–∞–≤–∫–∞', 
        '–≤–æ–∑–≤—Ä–∞—Ç',
        '–æ–ø–ª–∞—Ç–∞',
        'FAQ',
        '–æ –Ω–∞—Å'
      ],
      links: {  
        '–∫–æ–Ω—Ç–∞–∫—Ç—ã': '/contacts',
        '–¥–æ—Å—Ç–∞–≤–∫–∞': '/delivery',
        '–≤–æ–∑–≤—Ä–∞—Ç': '/returns', 
        '–æ–ø–ª–∞—Ç–∞': '/payment',
        'FAQ': '/faq',
        '–æ –Ω–∞—Å': '/about'
      },
      subcategories: [] 
    }
  };
  
  const menuItems: string[] = [
    'sale',
    '–æ–±—É–≤—å', 
    '–æ–¥–µ–∂–¥–∞',
    '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã',
    '–∫–æ–ª–ª–µ–∫—Ü–∏–∏',
    '–¥—Ä—É–≥–æ–µ',
    '–±—Ä–µ–Ω–¥—ã',
    '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
  ];

  // ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è URL –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –ø–æ–∏—Å–∫–æ–º
  const buildCatalogUrl = (searchTerm: string) => {
    const params = new URLSearchParams();
    if (searchTerm.trim()) {
      params.append('search', searchTerm.trim());
    }
    return `/catalog${params.toString() ? `?${params.toString()}` : ''}`;
  };

  const handleMenuEnter = useCallback((item: string): void => {
    if (megaMenuData[item as MenuKey] && !isSearchOpen) {
      setActiveMenu(item);
    }
  }, [isSearchOpen]);

  const handleMenuLeave = useCallback((): void => {
    if (!isSearchOpen) {
      setActiveMenu(null);
    }
  }, [isSearchOpen]);

  const handleSearchToggle = useCallback((): void => {
    setIsSearchOpen(!isSearchOpen);
    setActiveMenu(null); 
    if (!isSearchOpen) {
      setTimeout(() => {
        const searchInput = document.getElementById('search-input') as HTMLInputElement | null;
        if (searchInput) {
          searchInput.focus();
        }
      }, 300);
    } else {
      setSearchQuery(''); 
    }
  }, [isSearchOpen]);

  // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º handleSearchSubmit –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const handleSearchSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): void => {
    e.preventDefault();
    if (searchQuery.trim()) {
      console.log('üîç –ü–æ–∏—Å–∫ –∏–∑ —Ö–µ–¥–µ—Ä–∞:', searchQuery.trim());
      const url = buildCatalogUrl(searchQuery);
      router.push(url);
      setIsSearchOpen(false);
      setSearchQuery('');
    }
  }, [searchQuery, router]);

  const handleSearchKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>): void => {
    if (e.key === 'Escape') {
      setIsSearchOpen(false);
      setSearchQuery('');
    }
  }, []);

  const handleCartClick = useCallback((): void => {
    toggleCart();
  }, [toggleCart]);

  const handleAuthIconClick = () => {
    console.log('–ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ –ø—Ä–æ—Ñ–∏–ª—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
    setShowAuthModal(true);
  };

  const handleCloseAuthModal = useCallback((): void => {
    setShowAuthModal(false);
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const handleNavClick = useCallback((item: string, e: React.MouseEvent<HTMLAnchorElement>) => {
    if (item === 'sale') {
      e.preventDefault();
      window.location.href = '/catalog';
      return;
    }
    
    if (item === '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') {
      return;
    }
    
    e.preventDefault();
    console.log(`–ö–ª–∏–∫ –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${item}`);
  }, []);

  const getMenuPosition = useCallback((): React.CSSProperties => {
    if (!activeMenu) return {};
    
    const activeIndex = menuItems.indexOf(activeMenu);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞
    const screenWidth = typeof window !== 'undefined' ? window.innerWidth : 1400;
    
    let centerOffset;
    
    if (activeIndex === menuItems.length - 1) { // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      if (screenWidth >= 1400) {
        centerOffset = (activeIndex - 3.5) * 120 + 50;
      } else if (screenWidth >= 1200) {
        centerOffset = (activeIndex - 3.5) * 100 + 30;
      } else if (screenWidth >= 1024) {
        centerOffset = (activeIndex - 3.5) * 70;
      } else {
        centerOffset = 0; // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –Ω–∞ –º–∞–ª—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö
      }
    } else {
      if (screenWidth >= 1400) {
        centerOffset = (activeIndex - 3.5) * 120 + 200;
      } else if (screenWidth >= 1200) {
        centerOffset = (activeIndex - 3.5) * 100 + 150;
      } else if (screenWidth >= 1024) {
        centerOffset = (activeIndex - 3.5) * 70 + 80;
      } else {
        centerOffset = 0; // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –Ω–∞ –º–∞–ª—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö
      }
    }
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Å–¥–≤–∏–≥ —á—Ç–æ–±—ã –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
    const maxOffset = Math.max(0, (screenWidth - 600) / 2 - 40);
    const minOffset = -maxOffset;
    centerOffset = Math.max(minOffset, Math.min(maxOffset, centerOffset));
    
    return {
      transform: `translateX(${centerOffset}px)`,
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—ã—Ö–æ–¥ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞
      maxWidth: screenWidth < 900 ? 'calc(100vw - 30px)' : 'calc(100vw - 80px)',
      // –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      margin: '0 auto',
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      width: 'fit-content'
    };
  }, [activeMenu, menuItems]);

  // –ò –¥–æ–±–∞–≤—å—Ç–µ —Ö—É–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  const [screenWidth, setScreenWidth] = useState(1400);

  useEffect(() => {
    const handleResize = () => {
      setScreenWidth(window.innerWidth);
    };
    
    if (typeof window !== 'undefined') {
      handleResize(); // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      window.addEventListener('resize', handleResize);
      
      return () => window.removeEventListener('resize', handleResize);
    }
  }, []);

  const renderMegaMenu = (): JSX.Element | null => {
    if (!activeMenu || !megaMenuData[activeMenu as MenuKey]) {
      return null;
    }

    const menuData = megaMenuData[activeMenu as MenuKey];

    return (
      <div 
        className="mega-menu-container"
        onMouseEnter={() => setActiveMenu(activeMenu)}
        onMouseLeave={handleMenuLeave}
      >
        <div className="w-full py-8 lg:py-12">
          <div 
            className="mega-menu-inner w-4xl"
            style={getMenuPosition()}
          >
            <div className="mb-8 lg:mb-16">
              <div className="flex">
                <h3 className="mega-menu-title ">
                  {menuData.title}
                </h3>
                <div className="">
                  <div className="w-full h-0.5 bg-brand-dark mb-4 lg:mb-8 lg:mt-6 ml-5"></div>
                  <div className="ml-5 grid grid-cols-2">
                    {menuData.categories.map((category: string, index: number) => (
                      <a
                        key={index}
                        href={menuData.links?.[category] || '#'}
                        className="mega-menu-link"
                      >
                        {category}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>

            {/* –°–µ–∫—Ü–∏—è –ö–ê–¢–ï–ì–û–†–ò–Ø —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –ù–ï –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            {activeMenu !== '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' && (
              <div>
                <div className="flex">
                  <h3 className="mega-menu-title">
                    –ö–ê–¢–ï–ì–û–†–ò–Ø
                  </h3>
                  <div className="">
                    <div className="w-auto h-0.5 bg-brand-dark mb-4 lg:mb-8 lg:mt-6 ml-5"></div>
                    <div className="ml-5 grid grid-cols-2">
                      {menuData.subcategories.map((subcategory: string, index: number) => (
                        <a key={index} href="#" className="mega-menu-link">
                          {subcategory}
                        </a>
                      ))}
                      {menuData.additional?.map((item: string, index: number) => (
                        <a key={`additional-${index}`} href="#" className="mega-menu-link">
                          {item}
                        </a>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    );
  };

  return (
    <header className="w-full bg-white border-b border-gray-200 relative">
      <div className="w-full h-[120px] flex items-center justify-between px-[139px]">
        {/* –õ–æ–≥–æ—Ç–∏–ø */}
        <div className="flex-shrink-0">
          <a href="/">
            <img src="/icons/TS_logo.svg" alt="Tigr Shop" className="w-[37px] h-[58px]" />
          </a>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è - —Ç–æ—á–Ω–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
        <nav className="flex-shrink-0 relative">
          {/* ‚úÖ –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Ä–∞–±–æ—á–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º */}
          <div 
            className={`absolute top-1/2 right-0 transform -translate-y-1/2 h-10 flex items-center transition-all duration-500 ease-in-out z-20 ${
              isSearchOpen ? 'w-full opacity-100' : 'w-0 opacity-0'
            } overflow-hidden`}
          >
            <form onSubmit={handleSearchSubmit} className="w-full">
              <input
                id="search-input"
                type="text"
                value={searchQuery}
                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(e.target.value)}
                onKeyDown={handleSearchKeyDown}
                placeholder="–ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤, –±—Ä–µ–Ω–¥–æ–≤..."
                className="w-full h-10 px-4 bg-brand-beige text-brand-dark placeholder-brand-gray focus:outline-none rounded-full text-sm border-0 brand-text-small"
                style={{ border: 'none', outline: 'none' }}
              />
            </form>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
          <ul className={`flex items-center gap-8 text-sm text-brand-dark h-[27px] transition-opacity duration-300 ${
            isSearchOpen ? 'opacity-0 pointer-events-none' : 'opacity-100'
          }`}>
            {menuItems.map((item: string, index: number) => (
              <li 
                key={index}
                onMouseEnter={() => handleMenuEnter(item)}
              >
                <a 
                  href={item === 'sale' ? '/catalog' : '#'}
                  className={`nav-link ${
                    activeMenu === item ? 'text-brand-gray' : ''
                  }`}
                  onClick={(e) => handleNavClick(item, e)}
                >
                  {item}
                </a>
              </li>
            ))}
          </ul>
        </nav>

        {/* –ò–∫–æ–Ω–∫–∏ */}
        <div className="flex items-center gap-6 flex-shrink-0 relative z-30">
          <div 
            className="cursor-pointer hover:opacity-70 transition-opacity duration-200 hover-lift"
            onClick={handleSearchToggle}
          >
            <img src="/icons/search.svg" alt="–ü–æ–∏—Å–∫" className="w-6 h-6" />
          </div>
          <div 
            className="cursor-pointer hover:opacity-70 transition-opacity duration-200 relative hover-lift"
            onClick={handleCartClick}
          >
            <img src="/icons/cart.svg" alt="–ö–æ—Ä–∑–∏–Ω–∞" className="w-6 h-6" />
            {mounted && totalItems > 0 && (
              <span className="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-bold font-price">
                {totalItems > 99 ? '99+' : totalItems}
              </span>
            )}
          </div>
          <SmartProfileIcon onAuthClick={handleAuthIconClick} />
        </div>
      </div>

      {/* –ú–µ–≥–∞-–º–µ–Ω—é */}
      {!isSearchOpen && renderMegaMenu()}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      {showAuthModal && (
        <AuthModal onClose={handleCloseAuthModal} />
      )}
    </header>
  );
};

export default DesktopHeader;